# Adjust the window (floating or tiling window) size by adjusting its upper, lower, left, right edge of the window in 20 pixels
#               7(+)
#      +---------------------+
#      |        u(-)         |
#      |                     |
# h(+) | j(-)           k(-) | l(+)
#      |        n(-)         |
#      +---------------------+
#               space(+)

fn - u : yabai -m window --resize top:0:20          # top-
fn - 7 : yabai -m window --resize top:0:-20         # top+
fn - n : yabai -m window --resize bottom:0:-20      # bottom-
fn - space : yabai -m window --resize bottom:0:20   # bottom+
fn - j : yabai -m window --resize left:20:0         # left-
fn - h : yabai -m window --resize left:-20:0        # left+
fn - k : yabai -m window --resize right:-20:0       # right-
fn - l : yabai -m window --resize right:20:0        # right+

# Balance size
#   - 0: balance the sizes of the tiling windows in the curren workspace
fn - 0 : yabai -m space --balance

# Fullscreen
fn + shift - m : yabai -m window --grid 1:1:0:0:1:1

# Restore: centered and properly resized based on the display position (horizontally or vertically positioned)
fn + shift - 0 : read w h <<< $(echo $(yabai -m query --displays --display | jq .frame | jq '.w, .h')) && \
                 ( [ $w -gt $h ] && yabai -m window --grid 7:5:1:1:3:5 || yabai -m window --grid 5:10:1:1:8:2 )

# Movement
#   - k, j, h, l: move the current floating window to the up, down, left, or right by 20 pixels
fn + shift - k : yabai -m window --move rel:1:-20
fn + shift - j : yabai -m window --move rel:0:20
fn + shift - h : yabai -m window --move rel:-20:0
fn + shift - l : yabai -m window --move rel:20:0

# Split screen
fn + shift - w : yabai -m window --grid 2:1:0:0:1:1   # upper-half
fn + shift - s : yabai -m window --grid 2:1:0:1:1:1   # lower-half
fn + shift - a : yabai -m window --grid 1:2:0:0:1:1   # left-half
fn + shift - d : yabai -m window --grid 1:2:1:0:1:1   # right-half

# Create a workspace, move window there and follow focus
#   - n: create a new workspace at the end (within the current display), move the current window to that workspace, and focus the window
alt + shift - n : yabai -m space --create && \
                  index=$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index') && \
                  cur_window=$(yabai -m query --windows --window | jq '.id') && \
                  yabai -m window --space ${index} && \
                  yabai -m window --focus ${cur_window}

# Create a workspace and follow focus
#   -n: create a new workspace at the end (within the current display), and focus the workspace
alt + ctrl - n : yabai -m space --create && \
                 index=$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index') && \
                 yabai -m space --focus ${index}

# Destroy the current workspace, send the windows on this workspace to workspace #1, and focus workspace #1
alt + ctrl - w : yabai -m space --destroy

# Focus window
#   - k, j: focus the window above or below
#   - h, j: focus the window left or right (support moving the focus across the display)
#   - r:    focus the recently-focused window
#   - <, >: cycle through the windows in the stack backward or forward
#   - /:    focus the recently-focused window in the stack
#   - m:    focus the fullscreen window in the current workspace or cycle through all the fullscreen windows
lalt - k : yabai -m window --focus north
lalt - j : yabai -m window --focus south
lalt - h : yabai -m window --focus west || \
          yabai -m window --focus $(yabai -m query --windows --display west | \
                                    jq 'map(select(.visible == 1)) | sort_by(.frame.x, .frame.y) | last | .id') || \
          yabai -m display --focus west
lalt - l : yabai -m window --focus east || \
          yabai -m window --focus $(yabai -m query --windows --display east | \
                                    jq 'map(select(.visible == 1)) | sort_by(.frame.x, .frame.y) | first | .id') || \
          yabai -m display --focus east
lalt - r : yabai -m window --focus recent
lalt - 0x2B : yabai -m window --focus stack.prev || yabai -m window --focus stack.last
lalt - 0x2F : yabai -m window --focus stack.next || yabai -m window --focus stack.first
lalt - 0x2C : yabai -m window --focus stack.recent
lalt - m : [[ $(yabai -m query --windows --window | jq '."zoom-fullscreen"') == 0 ]] && \
          ( id=$(yabai -m query --windows --space | jq 'map(select(."zoom-fullscreen" == 1))[0] | .id') && \
            yabai -m window --focus ${id} ) || \
          ( yabai -m query --windows --space | \
            jq 'map(select(."zoom-fullscreen" == 1)) | sort_by(.id) | nth(index(map(select(.focused == 1))) - 1).id' | \
            xargs -I{} yabai -m window --focus {} )


# Focus workspace
#   - 1-0:  focus the workspace #1-#10
#   - [, ]: cycle through the workspaces (support moving the focus across the display)
#     e.g., 4 | 1 2 | 3 (three displays and currently at 2, using [ to move the focus 2 -> 1 -> 4 -> 3 -> 2, ..., ] is the same but on the opposite direction
#   - \:    focus the recently-focused workspace
lalt - 1 : yabai -m space --focus 1
lalt - 2 : yabai -m space --focus 2
lalt - 3 : yabai -m space --focus 3
lalt - 4 : yabai -m space --focus 4
lalt - 5 : yabai -m space --focus 5
lalt - 6 : yabai -m space --focus 6
lalt - 7 : yabai -m space --focus 7
lalt - 8 : yabai -m space --focus 8
lalt - 9 : yabai -m space --focus 9
lalt - 0 : yabai -m space --focus 10
lalt - 0x21 : yabai -m space --focus $(cur_space=$(yabai -m query --spaces --space | jq -r '.index') && \
                                      yabai -m query --displays | jq -r "sort_by(.frame.x) | [.[] | .spaces] | flatten | if index($cur_space) == 0 then last else .[index($cur_space) - 1] end")
lalt - 0x1E : yabai -m space --focus $(cur_space=$(yabai -m query --spaces --space | jq -r '.index') && \
                                      yabai -m query --displays | jq -r "sort_by(.frame.x) | [.[] | .spaces] | flatten | if index($cur_space) + 1 == length then first else .[index($cur_space) + 1] end")
lalt - 0x2A : yabai -m space --focus recent

# Send window to workspace and follow focus
#   - 1-0:  send the current window to the workspace #1-#10, and focus that window
#   - [, ]: send the current window to the workspace on its left or right (support sending across the display and cycling through), and focus that window
#     e.g., 4 | 1 2 | 3 (three display and currently at 3), [ will move the current window to workspace #2 and focus this window on workspace #2, and ] will move the current window to workspace #4 and focus this window on workspace #4
#   - \:    send the current window to the recently-focused workspace, and focus that window
alt + ctrl - 1 : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                 yabai -m window --space 1 && \
                 yabai -m window --focus ${cur_window}
alt + ctrl - 2 : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                 yabai -m window --space 2 && \
                 yabai -m window --focus ${cur_window}
alt + ctrl - 3 : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                 yabai -m window --space 3 && \
                 yabai -m window --focus ${cur_window}
alt + ctrl - 4 : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                 yabai -m window --space 4 && \
                 yabai -m window --focus ${cur_window}
alt + ctrl - 5 : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                 yabai -m window --space 5 && \
                 yabai -m window --focus ${cur_window}
alt + ctrl - 6 : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                 yabai -m window --space 6 && \
                 yabai -m window --focus ${cur_window}
alt + ctrl - 7 : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                 yabai -m window --space 7 && \
                 yabai -m window --focus ${cur_window}
alt + ctrl - 8 : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                 yabai -m window --space 8 && \
                 yabai -m window --focus ${cur_window}
alt + ctrl - 9 : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                 yabai -m window --space 9 && \
                 yabai -m window --focus ${cur_window}
alt + ctrl - 0 : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                 yabai -m window --space 10 && \
                 yabai -m window --focus ${cur_window}
alt + ctrl - 0x21 : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                    workspace_left=$(cur_space=$(yabai -m query --spaces --space | jq -r '.index') && \
                                     yabai -m query --displays | jq -r "sort_by(.frame.x) | [.[] | .spaces] | flatten | if index($cur_space) == 0 then .[length - 1] else .[index($cur_space) - 1] end") && \
                    yabai -m window --space ${workspace_left} && \
                    yabai -m window --focus ${cur_window}
alt + ctrl - 0x1E : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                    workspace_right=$(cur_space=$(yabai -m query --spaces --space | jq -r '.index') && \
                                     yabai -m query --displays | jq -r "sort_by(.frame.x) | [.[] | .spaces] | flatten | if index($cur_space) + 1 == length then .[0] else .[index($cur_space) + 1] end") && \
                    yabai -m window --space ${workspace_right} && \
                    yabai -m window --focus ${cur_window}
alt + ctrl - 0x2A : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                    yabai -m window --space recent && \
                    yabai -m window --focus ${cur_window}

# Change workspace layout
#   - b, f, s: chagne the layout of the current workspace to bsp, float, or stack
alt + ctrl - b : yabai -m space --layout bsp && \
                 open -g 'swiftbar://refreshplugin?name=yabai' && \
                 osascript -e "display notification \"Change the workspace layout to bsp\" with title \"yabai\""
alt + ctrl - f : yabai -m space --layout float && \
                 open -g 'swiftbar://refreshplugin?name=yabai' && \
                 osascript -e "display notification \"Change the workspace layout to float\" with title \"yabai\""
alt + ctrl - s : yabai -m space --layout stack && \
                 open -g 'swiftbar://refreshplugin?name=yabai' && \
                 osascript -e "display notification \"Change the workspace layout to stack\" with title \"yabai\""
